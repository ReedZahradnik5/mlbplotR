[{"path":"https://camdenk.github.io/mlbplotR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 mlbplotR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://camdenk.github.io/mlbplotR/articles/mlbplotR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with mlbplotR","text":"mlbplotR currently CRAN can get development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"camdenk/mlbplotR\")"},{"path":"https://camdenk.github.io/mlbplotR/articles/mlbplotR.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Getting Started with mlbplotR","text":"Let’s plot every team grid extra customization:  basic example FanGraphs data (pulled using baseballr) compares ERA FIP team’s top starting pitcher ERA:  ’s another looks Home Runs Allowed top pitchers:  Instead putting logos plot, can axis labels:  family element_*() functions allows lot extra customization axes labels can even used facet_wrap()/facet_grid() strip headers. Lastly, ’s example using headshots:  Note: player’s headshot data can’t found, headshot replaced MLB logo.","code":"library(mlbplotR) library(ggplot2) library(dplyr)  teams_colors_logos <- mlbplotR::load_mlb_teams() |>    dplyr::filter(!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")) |>    dplyr::mutate(     a = rep(1:6, 5),     b = sort(rep(1:5, 6), decreasing = TRUE),     alpha = ifelse(grepl(\"A\", team_abbr), 1, 0.75), # Keep alpha == 1 for teams that have an \"A\"     color = ifelse(grepl(\"E\", team_abbr), \"b/w\", NA) # Set teams that have an \"E\" to black & white   )    ggplot2::ggplot(teams_colors_logos, aes(x = a, y = b)) +    mlbplotR::geom_mlb_logos(aes(team_abbr = team_abbr, color = color, alpha = alpha), width = 0.075) +    ggplot2::geom_label(aes(label = team_abbr), nudge_y = -0.35, alpha = 0.5) +    ggplot2::scale_color_identity() +    ggplot2::scale_alpha_identity() +    ggplot2::theme_void() library(baseballr) library(scales)  df <- baseballr::fg_pitcher_leaders(x = 2021, y = 2021, q = 100, pitcher_type = \"sta\")  filtered_df <- df |>   dplyr::filter(Team != \"- - -\") |>    # FanGraphs Team abbreviations aren't the standard   # for what's used in the plotting functions so    # you could clean them with the following line,    # but the geom_*_logos() functions should all   # clean the abbreviations before plotting   #    # dplyr::mutate(Team = clean_team_abbrs(Team)) |>    dplyr::group_by(Team) |>    dplyr::slice_min(ERA, n = 1) |>    dplyr::ungroup()  filtered_df |>    ggplot2::ggplot(aes(x = ERA, y = FIP)) +   mlbplotR::geom_mlb_logos(aes(team_abbr = Team), width = 0.075, alpha = 0.7) +   ggplot2::labs(title = \"2021: ERA vs. FIP\",                 subtitle = \"Each Team's Top Starter By ERA | Min. 100 IP\",                 caption = \"Data: FanGraphs via baseballr\") +   ggplot2::theme_minimal() +   ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\")) +   ggplot2::scale_x_reverse(breaks = scales::pretty_breaks(), expand = c(.1, .1)) +   ggplot2::scale_y_reverse(breaks = scales::pretty_breaks(), expand = c(.1, .1)) filtered_df |>    # The scale_*_mlb() functions don't auto-clean abbreviations   dplyr::mutate(Team = clean_team_abbrs(Team)) |>    ggplot2::ggplot(aes(x = Team, y = HR)) +   ggplot2::geom_col(aes(color = Team, fill = Team), width = 0.5) +   mlbplotR::geom_mlb_logos(aes(team_abbr = Team), width = 0.07, alpha = 0.9) +   mlbplotR::scale_color_mlb(type = \"secondary\") +   mlbplotR::scale_fill_mlb(alpha = 0.4) +   ggplot2::labs(title = \"2021: Home Runs Allowed For Top Pitchers\",                 subtitle = \"HRs Allowed By Each Team's Top Starter By ERA | Min. 100 IP\",                 caption = \"Data: FanGraphs via baseballr\") +   ggplot2::theme_minimal() +   ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\"),                  axis.title.x = ggplot2::element_blank(),                  axis.text.x = ggplot2::element_blank(),                  panel.grid.major.x = element_blank()) +   ggplot2::scale_x_discrete(expand = c(0.05, 0.075)) filtered_df |>    # The scale_*_mlb() functions don't auto-clean abbreviations   dplyr::mutate(Team = clean_team_abbrs(Team)) |>    ggplot2::ggplot(aes(x = Team, y = HR)) +   ggplot2::geom_col(aes(color = Team, fill = Team), width = 0.5) +   #mlbplotR::geom_mlb_logos(aes(team_abbr = Team), width = 0.07, alpha = 0.9) +   mlbplotR::scale_color_mlb(type = \"secondary\") +   mlbplotR::scale_fill_mlb(alpha = 0.4) +   ggplot2::labs(title = \"2021: Home Runs Allowed\",                 subtitle = \"HRs Allowed By Each Team's Top Starter By ERA | Min. 100 IP\",                 caption = \"Data: FanGraphs via baseballr\") +   ggplot2::theme_minimal() +   ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\"),                  axis.title.x = ggplot2::element_blank(),                  panel.grid.major.x = ggplot2::element_blank(),                  # this line triggers the replacement of team abbreviations with logos                  axis.text.x = mlbplotR::element_mlb_logo()) +   ggplot2::scale_x_discrete(expand = c(0.05, 0.075)) df |>    dplyr::mutate(playerid = as.double(playerid)) |>    dplyr::left_join(mlbplotR::load_headshots(), by = c(\"playerid\" = \"fangraphs_id\")) |>    dplyr::slice_min(ERA, n = 12) |>    ggplot(aes(x = ERA, y = FIP)) +   mlbplotR::geom_mlb_headshots(aes(player_id = savant_id), height = 0.15) +   ggplot2::scale_x_reverse(breaks = scales::pretty_breaks(), expand = c(.1, .1)) +   ggplot2::scale_y_reverse(breaks = scales::pretty_breaks(), expand = c(.1, .1)) +   ggplot2::labs(title = \"2021 SP ERA Leaders\",                 subtitle = \"Minimum 100 IP\",                 caption = \"Data: FanGraphs via baseballr\") +   ggplot2::theme_minimal() +   ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\"))"},{"path":"https://camdenk.github.io/mlbplotR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Carl. Author. Camden Kay. Author, maintainer.","code":""},{"path":"https://camdenk.github.io/mlbplotR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carl S, Kay C (2022). mlbplotR: Create ggplot2 Visuals MLB Logos. https://github.com/camdenk/mlbplotR, https://camdenk.github.io/mlbplotR/.","code":"@Manual{,   title = {mlbplotR: Create ggplot2 Visuals with MLB Logos},   author = {Sebastian Carl and Camden Kay},   year = {2022},   note = {https://github.com/camdenk/mlbplotR, https://camdenk.github.io/mlbplotR/}, }"},{"path":"https://camdenk.github.io/mlbplotR/index.html","id":"mlbplotr-","dir":"","previous_headings":"","what":"Create ggplot2 Visuals with MLB Logos","title":"Create ggplot2 Visuals with MLB Logos","text":"code package copied heavily nflplotR minor changes support Major League Baseball logos. goal mlbplotR provide functions geoms help visualizations MLB related analysis. provides ggplot2 geoms heavy lifting plotting MLB logos high quality, correct aspect ratio, possible transparency.","code":""},{"path":"https://camdenk.github.io/mlbplotR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create ggplot2 Visuals with MLB Logos","text":"mlbplotR currently CRAN can get development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"camdenk/mlbplotR\")"},{"path":"https://camdenk.github.io/mlbplotR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create ggplot2 Visuals with MLB Logos","text":"Let’s plot every team grid extra customization:  getting started guide walk use cases package.","code":"library(mlbplotR) library(ggplot2) library(dplyr)  teams_colors_logos <- mlbplotR::load_mlb_teams() |>    dplyr::filter(!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")) |>    dplyr::mutate(     a = rep(1:6, 5),     b = sort(rep(1:5, 6), decreasing = TRUE),     alpha = ifelse(grepl(\"A\", team_abbr), 1, 0.75), # Keep alpha == 1 for teams that have an \"A\"     color = ifelse(grepl(\"E\", team_abbr), \"b/w\", NA) # Set teams that have an \"E\" to black & white   )    ggplot2::ggplot(teams_colors_logos, aes(x = a, y = b)) +    mlbplotR::geom_mlb_logos(aes(team_abbr = team_abbr, color = color, alpha = alpha), width = 0.075) +    ggplot2::geom_label(aes(label = team_abbr), nudge_y = -0.35, alpha = 0.5) +    ggplot2::scale_color_identity() +    ggplot2::scale_alpha_identity() +    ggplot2::theme_void()"},{"path":"https://camdenk.github.io/mlbplotR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Create ggplot2 Visuals with MLB Logos","text":"Many hands make light work! ways can contribute project: can open issue ’d like request specific data report bug/error.","code":""},{"path":"https://camdenk.github.io/mlbplotR/index.html","id":"to-do","dir":"","previous_headings":"","what":"To Do","title":"Create ggplot2 Visuals with MLB Logos","text":"Create package tutorials Add mean/median line geoms Add tests Continue add player ids headshots haven’t played Statcast era","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/clean_team_abbrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize MLB Team Abbreviations — clean_team_abbrs","title":"Standardize MLB Team Abbreviations — clean_team_abbrs","text":"function standardizes MLB team abbreviations Baseball Savant defaults. helps joins plotting","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/clean_team_abbrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize MLB Team Abbreviations — clean_team_abbrs","text":"","code":"clean_team_abbrs(abbr, keep_non_matches = TRUE)"},{"path":"https://camdenk.github.io/mlbplotR/reference/clean_team_abbrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize MLB Team Abbreviations — clean_team_abbrs","text":"abbr character vector abbreviations keep_non_matches non-matches kept vector?","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/clean_team_abbrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize MLB Team Abbreviations — clean_team_abbrs","text":"character vector length `abbr` cleaned team abbreviations   included `team_data`. Non matches may replaced   `NA` (depending value `keep_non_matches`).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/clean_team_abbrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize MLB Team Abbreviations — clean_team_abbrs","text":"","code":"x <- c(\"PIE\", \"STL\", \"WSN\", \"CWS\", \"CHW\") # use current location and keep non matches clean_team_abbrs(x) #> [1] \"PIE\" \"STL\" \"WSH\" \"CWS\" \"CWS\""},{"path":"https://camdenk.github.io/mlbplotR/reference/element.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme Elements for Image Grobs — element","title":"Theme Elements for Image Grobs — element","text":"conjunction [ggplot2::theme] system, following `element_` functions enable images non-data components plot, e.g. axis text. - `element_mlb_logo()` `element_mlb_scoreboard_logo()`: draws MLB team logos instead abbreviations.   - `element_mlb_dark_cap_logo()` `element_mlb_light_cap_logo()`: draws MLB team cap logos instead abbreviations.   - `element_mlb_headshot()`: draws MLB player headshots instead MLB IDs   - `element_path()`: draws images valid image URLs instead URL.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme Elements for Image Grobs — element","text":"","code":"element_mlb_logo(   alpha = NULL,   colour = NA,   hjust = NULL,   vjust = NULL,   color = NULL,   size = 0.5 )  element_mlb_scoreboard_logo(   alpha = NULL,   colour = NA,   hjust = NULL,   vjust = NULL,   color = NULL,   size = 0.5 )  element_mlb_dark_cap_logo(   alpha = NULL,   colour = NA,   hjust = NULL,   vjust = NULL,   color = NULL,   size = 0.5 )  element_mlb_light_cap_logo(   alpha = NULL,   colour = NA,   hjust = NULL,   vjust = NULL,   color = NULL,   size = 0.5 )  element_mlb_headshot(   alpha = NULL,   colour = NA,   hjust = NULL,   vjust = NULL,   color = NULL,   size = 0.5 )  element_path(   alpha = NULL,   colour = NA,   hjust = NULL,   vjust = NULL,   color = NULL,   size = 0.5 )"},{"path":"https://camdenk.github.io/mlbplotR/reference/element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme Elements for Image Grobs — element","text":"alpha alpha channel, .e. transparency level, numerical value 0 1. colour, color image colorized color. Use special character `\"b/w\"` set black white. information valid color names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill>. hjust, vjust horizontal vertical adjustment respectively. Must numerical value 0 1. size output grob size `cm` (!).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme Elements for Image Grobs — element","text":"S3 object class `element`.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/element.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme Elements for Image Grobs — element","text":"elements translate MLB team abbreviations MLB player IDs   logo images headshots, respectively.","code":""},{"path":[]},{"path":"https://camdenk.github.io/mlbplotR/reference/element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme Elements for Image Grobs — element","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove league logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr )  # use logos for x-axis ggplot(df, aes(x = teams, y = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_mlb(type = \"secondary\") +   scale_fill_mlb(alpha = 0.4) +   theme_minimal() +   theme(axis.text.x = element_mlb_logo())   # use logos for y-axis ggplot(df, aes(y = teams, x = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_mlb(type = \"secondary\") +   scale_fill_mlb(alpha = 0.4) +   theme_minimal() +   theme(axis.text.y = element_mlb_logo())   ############################################################################# # Headshot Examples ############################################################################# library(mlbplotR) library(ggplot2)   dfh <- data.frame(   random_value = runif(9, 0, 1),   player_id = c(\"594798\",                   \"592450\",                   \"605141\",                   \"665742\",                   \"545361\",                   \"665487\",                   \"571448\",                   \"0\",                   \"543037\") )  # use headshots for x-axis ggplot(dfh, aes(x = player_id, y = random_value)) +   geom_col(width = 0.5) +   theme_minimal() +   theme(axis.text.x = element_mlb_headshot())   # use headshots for y-axis ggplot(dfh, aes(y = player_id, x = random_value)) +   geom_col(width = 0.5) +   theme_minimal() +   theme(axis.text.y = element_mlb_headshot())  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_from_path.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"geom used plot MLB images instead   points ggplot. requires x, y aesthetics well path.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_from_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"","code":"geom_from_path(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_from_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [ggplot2::layer()]. often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_from_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"ggplot2 layer ([ggplot2::layer()]) can added plot   created [ggplot2::ggplot()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_from_path.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"`geom_mlb_logos()` understands following aesthetics (required aesthetics bold): **x** - x-coordinate. **y** - y-coordinate. **path** - file path, url, raster object bitmap array. See [`magick::image_read()`] information. `alpha = NULL` - alpha channel, .e. transparency level, numerical value 0 1. `colour = NULL` - image colorized colour. Use special character `\"b/w\"` set black white. information valid colour names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill> `angle = 0` - angle image numerical value 0° 360°. `hjust = 0.5` - horizontal adjustment relative given x coordinate. Must numerical value 0 1. `vjust = 0.5` - vertical adjustment relative given y coordinate. Must numerical value 0 1. `width = 1.0` - desired width image `npc` (Normalised Parent Coordinates).                           default value set 1.0 *big* necessary                           used values computed relative default.                           typical size `width = 0.1` (see examples). `height = 1.0` - desired height image `npc` (Normalised Parent Coordinates).                            default value set 1.0 *big* necessary                            used values computed relative default.                            typical size `height = 0.1` (see examples).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_from_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing Images from URLs or Local Paths — geom_from_path","text":"","code":"# \\donttest{ library(ggplot2) library(mlbplotR)  # create x-y-coordinates of a triangle and add league logo urls df <- data.frame(   a = c(sin(2 * pi * (0:4) / 5), 0),   b = c(cos(2 * pi * (0:4) / 5), 0),   url = c(     \"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/virginia.svg\",     \"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/michigan-st.svg\",     \"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/lsu.svg\",     \"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/texas.svg\",     \"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/oregon.svg\",     \"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/james-madison.svg\"   ) )  # plot images directly from url ggplot(df, aes(x = a, y = b)) +   geom_from_path(aes(path = url), width = 0.15) +   coord_cartesian(xlim = c(-2, 2), ylim = c(-1.3, 1.5)) +   theme_void()   # plot images directly from url and apply transparency ggplot(df, aes(x = a, y = b)) +   geom_from_path(aes(path = url), width = 0.15, alpha = 0.5) +   coord_cartesian(xlim = c(-2, 2), ylim = c(-1.3, 1.5)) +   theme_void()   # It is also possible and recommended to use the underlying Geom inside a # ggplot2 annotation ggplot() +   annotate(     mlbplotR::GeomFromPath,     x = 0,     y = 0,     path = \"https://a.espncdn.com/combiner/i?img=/i/teamlogos/leagues/500/mlb.png\",     width = 0.4   ) +   theme_minimal()  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_dark_cap_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","text":"geom used plot MLB team cap league logos instead   points ggplot. requires x, y aesthetics well valid MLB   team abbreviation. latter can checked [`valid_team_names()`].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_dark_cap_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","text":"","code":"geom_mlb_dark_cap_logos(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_dark_cap_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [ggplot2::layer()]. often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_dark_cap_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","text":"ggplot2 layer ([ggplot2::layer()]) can added plot   created [ggplot2::ggplot()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_dark_cap_logos.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","text":"`geom_mlb_dark_cap_logos()` understands following aesthetics (required aesthetics bold): **x** - x-coordinate. **y** - y-coordinate. **team_abbr** - team abbreviation. Need use Savant's abbreviation. `alpha = NULL` - alpha channel, .e. transparency level, numerical value 0 1. `colour = NULL` - image colourized colour. Use special character `\"b/w\"` set black white. information valid colour names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill> `angle = 0` - angle image numerical value 0° 360°. `hjust = 0.5` - horizontal adjustment relative given x coordinate. Must numerical value 0 1. `vjust = 0.5` - vertical adjustment relative given y coordinate. Must numerical value 0 1. `height = 1.0` - desired height image `npc` (Normalised Parent Coordinates).                            default value set 1.0 *big* necessary                            used values computed relative default.                            typical size `height = 0.1` (see examples).                            cap logos, scaling works better adjusting height width. `width = 1.0` - desired width image `npc` (Normalised Parent Coordinates).                           default value set 1.0 *big* necessary                           used values computed relative default.                           typical size `width = 0.075` (see examples).                           cap logos, scaling works better adjusting height width.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_dark_cap_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_dark_cap_logos","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"NL\", \"AL\", \"MLB\")]  df <- data.frame(   a = rep(1:6, 5),   b = sort(rep(1:5, 6), decreasing = TRUE),   teams = team_abbr )  # keep alpha == 1 for all teams including an \"A\" matches <- grepl(\"A\", team_abbr) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non \"A\" teams df$colour <- ifelse(matches, NA, \"gray\")  # scatterplot of all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_dark_cap_logos(aes(team_abbr = teams), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_dark_cap_logos(aes(team_abbr = teams, alpha = alpha), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_colour_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_dark_cap_logos(aes(team_abbr = teams, alpha = alpha, colour = colour), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   scale_colour_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_dark_cap_logos(aes(team_abbr = teams), width = 0.075, alpha = 0.6) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # it's also possible to plot league logos league <- data.frame(a = 1:3, b = 0, teams = c(\"AL\", \"NL\", \"MLB\")) ggplot(league, aes(x = a, y = b)) +   geom_mlb_dark_cap_logos(aes(team_abbr = teams), width = 0.3) +   geom_label(aes(label = teams), nudge_y = -0.4, alpha = 0.5) +   coord_cartesian(xlim = c(0.5,3.5), ylim = c(-0.75,.75)) +   theme_void()  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_headshots.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","title":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","text":"geom used plot MLB player headshots instead   points ggplot. requires x, y aesthetics well valid MLB   id (ID associated baseball savant page).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_headshots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","text":"","code":"geom_mlb_headshots(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_headshots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [ggplot2::layer()]. often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_headshots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","text":"ggplot2 layer ([ggplot2::layer()]) can added plot   created [ggplot2::ggplot()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_headshots.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","text":"`geom_mlb_headshots()` understands following aesthetics (required aesthetics bold): **x** - x-coordinate. **y** - y-coordinate. **player_id** - players' MLB (Baseball Savant) id. `alpha = NULL` - alpha channel, .e. transparency level, numerical value 0 1. `colour = NULL` - image colorized colour. Use special character `\"b/w\"` set black white. information valid colour names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill> `angle = 0` - angle image numerical value 0° 360°. `hjust = 0.5` - horizontal adjustment relative given x coordinate. Must numerical value 0 1. `vjust = 0.5` - vertical adjustment relative given y coordinate. Must numerical value 0 1. `width = 1.0` - desired width image `npc` (Normalised Parent Coordinates).                           default value set 1.0 *big* necessary                           used values computed relative default.                           typical size `width = 0.075` (see examples). `height = 1.0` - desired height image `npc` (Normalised Parent Coordinates).                            default value set 1.0 *big* necessary                            used values computed relative default.                            typical size `height = 0.1` (see examples).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_headshots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing MLB Player Headshots — geom_mlb_headshots","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  df <- data.frame(   a = c(rep(1:3, 3), 1.5, 2.5),   b = c(sort(rep(1:3, 3), decreasing = TRUE), 2.5, 2.5),   player_id = c(\"660670\",                 \"545361\",                 \"605141\",                 \"571448\",                 \"594798\",                 \"518692\",                 \"0\",                 \"521692\",                 \"120074\",                 \"665487\",                 \"518934\"),   player_name = c(\"Ronald Acuña Jr.\",                   \"Mike Trout\",                   \"Mookie Betts\",                   \"Nolan Arenado\",                   \"Jacob deGrom\",                   \"Freddie Freeman\",                   \"Non Match\",                   \"Salvador Perez\",                   \"David Ortiz\",                   \"Fernanto Tatis Jr.\",                   \"DJ LeMahieu\") )  # set a custom fill colour for one player df$colour <- ifelse(df$a == 2 & df$b == 2, NA, \"b/w\")  # scatterplot of the headshots ggplot(df, aes(x = a, y = b)) +   geom_mlb_headshots(aes(player_id = player_id), height = 0.2) +   geom_label(aes(label = player_name), nudge_y = -0.35, alpha = 0.5) +   coord_cartesian(xlim = c(0.75, 3.25), ylim = c(0.7, 3.25)) +   theme_void()   # apply alpha as constant ggplot(df, aes(x = a, y = b)) +   geom_mlb_headshots(aes(player_id = player_id), height = 0.2, alpha = 0.5) +   geom_label(aes(label = player_name), nudge_y = -0.35, alpha = 0.5) +   coord_cartesian(xlim = c(0.75, 3.25), ylim = c(0.7, 3.25)) +   theme_void()   # apply colour as an aesthetic ggplot(df, aes(x = a, y = b)) +   geom_mlb_headshots(aes(player_id = player_id, colour = colour), height = 0.2) +   geom_label(aes(label = player_name), nudge_y = -0.35, alpha = 0.5) +   coord_cartesian(xlim = c(0.75, 3.25), ylim = c(0.7, 3.25)) +   scale_colour_identity() +   theme_void()   # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_light_cap_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","text":"geom used plot MLB team cap league logos instead   points ggplot. requires x, y aesthetics well valid MLB   team abbreviation. latter can checked [`valid_team_names()`].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_light_cap_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","text":"","code":"geom_mlb_light_cap_logos(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_light_cap_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [ggplot2::layer()]. often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_light_cap_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","text":"ggplot2 layer ([ggplot2::layer()]) can added plot   created [ggplot2::ggplot()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_light_cap_logos.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","text":"`geom_mlb_light_cap_logos()` understands following aesthetics (required aesthetics bold): **x** - x-coordinate. **y** - y-coordinate. **team_abbr** - team abbreviation. Need use Savant's abbreviation. `alpha = NULL` - alpha channel, .e. transparency level, numerical value 0 1. `colour = NULL` - image colourized colour. Use special character `\"b/w\"` set black white. information valid colour names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill> `angle = 0` - angle image numerical value 0° 360°. `hjust = 0.5` - horizontal adjustment relative given x coordinate. Must numerical value 0 1. `vjust = 0.5` - vertical adjustment relative given y coordinate. Must numerical value 0 1. `height = 1.0` - desired height image `npc` (Normalised Parent Coordinates).                            default value set 1.0 *big* necessary                            used values computed relative default.                            typical size `height = 0.1` (see examples).                            cap logos, scaling works better adjusting height width. `width = 1.0` - desired width image `npc` (Normalised Parent Coordinates).                           default value set 1.0 *big* necessary                           used values computed relative default.                           typical size `width = 0.075` (see examples).                           cap logos, scaling works better adjusting height width.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_light_cap_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing MLB Team Cap Logos — geom_mlb_light_cap_logos","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"NL\", \"AL\", \"MLB\")]  df <- data.frame(   a = rep(1:6, 5),   b = sort(rep(1:5, 6), decreasing = TRUE),   teams = team_abbr )  # keep alpha == 1 for all teams including an \"A\" matches <- grepl(\"A\", team_abbr) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non \"A\" teams df$colour <- ifelse(matches, NA, \"gray\")  # scatterplot of all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_light_cap_logos(aes(team_abbr = teams), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_light_cap_logos(aes(team_abbr = teams, alpha = alpha), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_colour_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_light_cap_logos(aes(team_abbr = teams, alpha = alpha, colour = colour), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   scale_colour_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_light_cap_logos(aes(team_abbr = teams), width = 0.075, alpha = 0.6) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # it's also possible to plot league logos league <- data.frame(a = 1:3, b = 0, teams = c(\"AL\", \"NL\", \"MLB\")) ggplot(league, aes(x = a, y = b)) +   geom_mlb_light_cap_logos(aes(team_abbr = teams), width = 0.3) +   geom_label(aes(label = teams), nudge_y = -0.4, alpha = 0.5) +   coord_cartesian(xlim = c(0.5,3.5), ylim = c(-0.75,.75)) +   theme_void()  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","text":"geom used plot MLB team league logos instead   points ggplot. requires x, y aesthetics well valid MLB   team abbreviation. latter can checked [`valid_team_names()`].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","text":"","code":"geom_mlb_logos(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [ggplot2::layer()]. often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","text":"ggplot2 layer ([ggplot2::layer()]) can added plot   created [ggplot2::ggplot()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_logos.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","text":"`geom_mlb_logos()` understands following aesthetics (required aesthetics bold): **x** - x-coordinate. **y** - y-coordinate. **team_abbr** - team abbreviation. Need use Savant's abbreviation. `alpha = NULL` - alpha channel, .e. transparency level, numerical value 0 1. `colour = NULL` - image colourized colour. Use special character `\"b/w\"` set black white. information valid colour names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill> `angle = 0` - angle image numerical value 0° 360°. `hjust = 0.5` - horizontal adjustment relative given x coordinate. Must numerical value 0 1. `vjust = 0.5` - vertical adjustment relative given y coordinate. Must numerical value 0 1. `width = 1.0` - desired width image `npc` (Normalised Parent Coordinates).                           default value set 1.0 *big* necessary                           used values computed relative default.                           typical size `width = 0.075` (see examples). `height = 1.0` - desired height image `npc` (Normalised Parent Coordinates).                            default value set 1.0 *big* necessary                            used values computed relative default.                            typical size `height = 0.1` (see examples).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_logos","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"NL\", \"AL\", \"MLB\")]  df <- data.frame(   a = rep(1:6, 5),   b = sort(rep(1:5, 6), decreasing = TRUE),   teams = team_abbr )  # keep alpha == 1 for all teams including an \"A\" matches <- grepl(\"A\", team_abbr) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non \"A\" teams df$colour <- ifelse(matches, NA, \"gray\")  # scatterplot of all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_logos(aes(team_abbr = teams), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_logos(aes(team_abbr = teams, alpha = alpha), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_colour_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_logos(aes(team_abbr = teams, alpha = alpha, colour = colour), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   scale_colour_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_logos(aes(team_abbr = teams), width = 0.075, alpha = 0.6) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # it's also possible to plot league logos league <- data.frame(a = 1:3, b = 0, teams = c(\"AL\", \"NL\", \"MLB\")) ggplot(league, aes(x = a, y = b)) +   geom_mlb_logos(aes(team_abbr = teams), width = 0.3) +   geom_label(aes(label = teams), nudge_y = -0.4, alpha = 0.5) +   coord_cartesian(xlim = c(0.5,3.5), ylim = c(-0.75,.75)) +   theme_void()  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_scoreboard_logos.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","text":"geom used plot MLB team league logos instead   points ggplot. requires x, y aesthetics well valid MLB   team abbreviation. latter can checked [`valid_team_names()`].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_scoreboard_logos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","text":"","code":"geom_mlb_scoreboard_logos(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE )"},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_scoreboard_logos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed [ggplot2::layer()]. often aesthetics, used set aesthetic fixed value. See section \"Aesthetics\" full list possible arguments. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_scoreboard_logos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","text":"ggplot2 layer ([ggplot2::layer()]) can added plot   created [ggplot2::ggplot()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_scoreboard_logos.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","text":"`geom_mlb_scoreboard_logos()` understands following aesthetics (required aesthetics bold): **x** - x-coordinate. **y** - y-coordinate. **team_abbr** - team abbreviation. Need use Savant's abbreviation. `alpha = NULL` - alpha channel, .e. transparency level, numerical value 0 1. `colour = NULL` - image colourized colour. Use special character `\"b/w\"` set black white. information valid colour names ggplot2 see <https://ggplot2.tidyverse.org/articles/ggplot2-specs.html?q=colour#colour--fill> `angle = 0` - angle image numerical value 0° 360°. `hjust = 0.5` - horizontal adjustment relative given x coordinate. Must numerical value 0 1. `vjust = 0.5` - vertical adjustment relative given y coordinate. Must numerical value 0 1. `width = 1.0` - desired width image `npc` (Normalised Parent Coordinates).                           default value set 1.0 *big* necessary                           used values computed relative default.                           typical size `width = 0.075` (see examples). `height = 1.0` - desired height image `npc` (Normalised Parent Coordinates).                            default value set 1.0 *big* necessary                            used values computed relative default.                            typical size `height = 0.1` (see examples).","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/geom_mlb_scoreboard_logos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Layer for Visualizing MLB Team Logos — geom_mlb_scoreboard_logos","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"NL\", \"AL\", \"MLB\")]  df <- data.frame(   a = rep(1:6, 5),   b = sort(rep(1:5, 6), decreasing = TRUE),   teams = team_abbr )  # keep alpha == 1 for all teams including an \"A\" matches <- grepl(\"A\", team_abbr) df$alpha <- ifelse(matches, 1, 0.2) # also set a custom fill colour for the non \"A\" teams df$colour <- ifelse(matches, NA, \"gray\")  # scatterplot of all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_scoreboard_logos(aes(team_abbr = teams), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # apply alpha via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() to use the alpha # values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_scoreboard_logos(aes(team_abbr = teams, alpha = alpha), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   theme_void()   # apply alpha and colour via an aesthetic from inside the dataset `df` # please note that you have to add scale_alpha_identity() as well as # scale_colour_identity() to use the alpha and colour values in your dataset! ggplot(df, aes(x = a, y = b)) +   geom_mlb_scoreboard_logos(aes(team_abbr = teams, alpha = alpha, colour = colour), width = 0.075) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   scale_alpha_identity() +   scale_colour_identity() +   theme_void()   # apply alpha as constant for all logos ggplot(df, aes(x = a, y = b)) +   geom_mlb_scoreboard_logos(aes(team_abbr = teams), width = 0.075, alpha = 0.6) +   geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +   theme_void()   # it's also possible to plot league logos league <- data.frame(a = 1:3, b = 0, teams = c(\"AL\", \"NL\", \"MLB\")) ggplot(league, aes(x = a, y = b)) +   geom_mlb_scoreboard_logos(aes(team_abbr = teams), width = 0.3) +   geom_label(aes(label = teams), nudge_y = -0.4, alpha = 0.5) +   coord_cartesian(xlim = c(0.5,3.5), ylim = c(-0.75,.75)) +   theme_void()  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/ggpreview.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview ggplot in Specified Dimensions — ggpreview","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"function previews ggplot actual dimensions order see look saved. also significantly faster default preview RStudio ggplots created using mlbplotR.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/ggpreview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"","code":"ggpreview(   plot = ggplot2::last_plot(),   width = NA,   height = NA,   asp = NULL,   dpi = 300,   device = \"png\",   units = c(\"in\", \"cm\", \"mm\", \"px\"),   scale = 1,   limitsize = TRUE,   bg = NULL,   ... )"},{"path":"https://camdenk.github.io/mlbplotR/reference/ggpreview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"plot Plot save, defaults last plot displayed. width, height, units Plot size units (\"\", \"cm\", \"mm\", \"px\"). supplied, uses size current graphics device. asp aspect ratio plot calculated `width / height`. numeric value (`NULL`) `height` plot recalculated `height = width / asp`. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). Applies raster output types. device Device use. Can either device function (e.g. png), one \"eps\", \"ps\", \"tex\" (pictex), \"pdf\", \"jpeg\", \"tiff\", \"png\", \"bmp\", \"svg\" \"wmf\" (windows ). scale Multiplicative scaling factor. limitsize TRUE (default), ggsave() save images larger 50x50 inches, prevent common error specifying dimensions pixels. bg Background colour. NULL, uses plot.background fill value plot theme. ... arguments passed graphics device function, specified device.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/ggpreview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"return value, called side effects.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/ggpreview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preview ggplot in Specified Dimensions — ggpreview","text":"","code":"library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove league logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr )  # use logos for x-axis # note that the plot is assigned to the object \"p\" p <- ggplot(df, aes(x = teams, y = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_mlb(type = \"secondary\") +   scale_fill_mlb(alpha = 0.4) +   theme_minimal() +   theme(axis.text.x = element_mlb_logo())  # preview p with defined width and aspect ratio (only available in RStudio) if (rstudioapi::isAvailable()){   ggpreview(p, width = 5, asp = 16/9) }"},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_merge_stack_team_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge and stack text from two columns in `gt` and color one with team colors — gt_merge_stack_team_color","title":"Merge and stack text from two columns in `gt` and color one with team colors — gt_merge_stack_team_color","text":"`gt_merge_stack_team_color()` function takes existing `gt` table merges column 1 column 2, stacking column 1's text top column 2's. Top text caps lower text bigger, bolded, colored team name another column. slightly modified version [`gtExtras::gt_merge_stack()`](https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html)  written Tom Mock.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_merge_stack_team_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge and stack text from two columns in `gt` and color one with team colors — gt_merge_stack_team_color","text":"","code":"gt_merge_stack_team_color(   gt_object,   col1,   col2,   team_col,   font_size_top = 12,   font_size_bottom = 14,   color = \"black\" )"},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_merge_stack_team_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge and stack text from two columns in `gt` and color one with team colors — gt_merge_stack_team_color","text":"gt_object existing gt table object class `gt_tbl` col1 column stack top. converted caps, black bold text. col2 column merge place . smaller team color corresponds `team_col`. team_col column team names match `valid_team_names()` color bottom. font_size_top font size top text. font_size_bottom font size bottom text. color color top text.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_merge_stack_team_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge and stack text from two columns in `gt` and color one with team colors — gt_merge_stack_team_color","text":"object class `gt_tbl`.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_merge_stack_team_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge and stack text from two columns in `gt` and color one with team colors — gt_merge_stack_team_color","text":"","code":"library(gt) library(mlbplotR)  mlbplotR::load_mlb_teams() %>%   dplyr::slice(1:5) %>%   dplyr::select(team_abbr, team_name) %>%   tidyr::separate(team_name, c(\"Team1\", \"Team2\",\"Team3\"), fill = \"left\") %>%   dplyr::mutate(Team3 = dplyr::if_else(Team3 %in% c(\"Sox\", \"Jays\"), paste(Team2, Team3), Team3),                 Team2 = dplyr::case_when(grepl(\"Sox|Jays\", Team3) ~ Team1,                                          Team3 == \"Cardinals\" ~ paste(Team1, Team2, sep = \". \"),                                          is.na(Team1) ~ Team2,                                          TRUE ~ paste(Team1, Team2))) %>%   dplyr::select(team_abbr, Team2, Team3) %>%   gt::gt() %>%   gt_merge_stack_team_color(col1 = \"Team2\", col2 = \"Team3\", team_col = \"team_abbr\") #> <div id=\"ubbkydxnqq\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>html { #>   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; #> } #>  #> #ubbkydxnqq .gt_table { #>   display: table; #>   border-collapse: collapse; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #ubbkydxnqq .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 0; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #ubbkydxnqq .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #ubbkydxnqq .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #ubbkydxnqq .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #ubbkydxnqq .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #ubbkydxnqq .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #ubbkydxnqq .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #ubbkydxnqq .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #ubbkydxnqq .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #ubbkydxnqq .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #ubbkydxnqq .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #ubbkydxnqq .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ubbkydxnqq .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #ubbkydxnqq .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #ubbkydxnqq .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ubbkydxnqq .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #ubbkydxnqq .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ubbkydxnqq .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #ubbkydxnqq .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-left: 4px; #>   padding-right: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ubbkydxnqq .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #ubbkydxnqq .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ubbkydxnqq .gt_left { #>   text-align: left; #> } #>  #> #ubbkydxnqq .gt_center { #>   text-align: center; #> } #>  #> #ubbkydxnqq .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #ubbkydxnqq .gt_font_normal { #>   font-weight: normal; #> } #>  #> #ubbkydxnqq .gt_font_bold { #>   font-weight: bold; #> } #>  #> #ubbkydxnqq .gt_font_italic { #>   font-style: italic; #> } #>  #> #ubbkydxnqq .gt_super { #>   font-size: 65%; #> } #>  #> #ubbkydxnqq .gt_two_val_uncert { #>   display: inline-block; #>   line-height: 1em; #>   text-align: right; #>   font-size: 60%; #>   vertical-align: -0.25em; #>   margin-left: 0.1em; #> } #>  #> #ubbkydxnqq .gt_footnote_marks { #>   font-style: italic; #>   font-weight: normal; #>   font-size: 75%; #>   vertical-align: 0.4em; #> } #>  #> #ubbkydxnqq .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #ubbkydxnqq .gt_slash_mark { #>   font-size: 0.7em; #>   line-height: 0.7em; #>   vertical-align: 0.15em; #> } #>  #> #ubbkydxnqq .gt_fraction_numerator { #>   font-size: 0.6em; #>   line-height: 0.6em; #>   vertical-align: 0.45em; #> } #>  #> #ubbkydxnqq .gt_fraction_denominator { #>   font-size: 0.6em; #>   line-height: 0.6em; #>   vertical-align: -0.05em; #> } #> <\/style> #>   <table class=\"gt_table\"> #>    #>   <thead class=\"gt_col_headings\"> #>     <tr> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\">team_abbr<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\">Team2<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td class=\"gt_row gt_left\">ARI<\/td> #> <td class=\"gt_row gt_left\"><div style='line-height:10px'> #> <span style='font-variant:small-caps;font-weight:lighter;color:black;font-size:12px'>Arizona #> <\/div> #> <div style='line-height:12px'> #> <span style ='font-variant:small-caps;font-weight:bold;color:#A71930;font-size:14px'>Diamondbacks #> <\/span><\/div><\/td><\/tr> #>     <tr><td class=\"gt_row gt_left\">ATL<\/td> #> <td class=\"gt_row gt_left\"><div style='line-height:10px'> #> <span style='font-variant:small-caps;font-weight:lighter;color:black;font-size:12px'>Atlanta #> <\/div> #> <div style='line-height:12px'> #> <span style ='font-variant:small-caps;font-weight:bold;color:#CE1141;font-size:14px'>Braves #> <\/span><\/div><\/td><\/tr> #>     <tr><td class=\"gt_row gt_left\">BAL<\/td> #> <td class=\"gt_row gt_left\"><div style='line-height:10px'> #> <span style='font-variant:small-caps;font-weight:lighter;color:black;font-size:12px'>Baltimore #> <\/div> #> <div style='line-height:12px'> #> <span style ='font-variant:small-caps;font-weight:bold;color:#DF4601;font-size:14px'>Orioles #> <\/span><\/div><\/td><\/tr> #>     <tr><td class=\"gt_row gt_left\">BOS<\/td> #> <td class=\"gt_row gt_left\"><div style='line-height:10px'> #> <span style='font-variant:small-caps;font-weight:lighter;color:black;font-size:12px'>Boston #> <\/div> #> <div style='line-height:12px'> #> <span style ='font-variant:small-caps;font-weight:bold;color:#BD3039;font-size:14px'>Red Sox #> <\/span><\/div><\/td><\/tr> #>     <tr><td class=\"gt_row gt_left\">CHC<\/td> #> <td class=\"gt_row gt_left\"><div style='line-height:10px'> #> <span style='font-variant:small-caps;font-weight:lighter;color:black;font-size:12px'>Chicago #> <\/div> #> <div style='line-height:12px'> #> <span style ='font-variant:small-caps;font-weight:bold;color:#0E3386;font-size:14px'>Cubs #> <\/span><\/div><\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_mlb.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logos into rows of a `gt` table — gt_mlb","title":"Add logos into rows of a `gt` table — gt_mlb","text":"`gt_fmt_mlb_logo` `gt_fmt_mlb_scoreboard_logo` functions take existing `gt_tbl` object converts MLB team names `valid_team_names()` team logos. wrapper around [`gtExtras::gt_image_rows()`](https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html) written Tom Mock, wrapper around `gt::text_transform()` + `gt::web_image()`/ `gt::local_image()` necessary boilerplate already applied.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_mlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logos into rows of a `gt` table — gt_mlb","text":"","code":"gt_fmt_mlb_logo(gt_object, columns, height = 30)  gt_fmt_mlb_scoreboard_logo(gt_object, columns, height = 30)"},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_mlb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logos into rows of a `gt` table — gt_mlb","text":"gt_object existing gt table object class `gt_tbl` columns columns wherein changes cell data colors occur. height absolute height (px) image table cell.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_mlb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logos into rows of a `gt` table — gt_mlb","text":"object class `gt_tbl`.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/gt_mlb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add logos into rows of a `gt` table — gt_mlb","text":"","code":"library(gt) library(mlbplotR)  df <- data.frame(team = valid_team_names()[1:5],                  logo = valid_team_names()[1:5],                  scoreboard_logo = valid_team_names()[1:5])  table <- df %>%  gt() %>%  gt_fmt_mlb_logo(columns = \"logo\") %>%  gt_fmt_mlb_scoreboard_logo(columns = \"scoreboard_logo\")"},{"path":"https://camdenk.github.io/mlbplotR/reference/load_headshots.html","id":null,"dir":"Reference","previous_headings":"","what":"Output MLB Team Abbreviations — load_headshots","title":"Output MLB Team Abbreviations — load_headshots","text":"Output MLB Team Abbreviations","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/load_headshots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output MLB Team Abbreviations — load_headshots","text":"","code":"load_headshots()"},{"path":"https://camdenk.github.io/mlbplotR/reference/load_headshots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output MLB Team Abbreviations — load_headshots","text":"tibble player names ids various sources.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/load_headshots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output MLB Team Abbreviations — load_headshots","text":"","code":"# \\donttest{   load_headshots() #>          player_name      last_first      chadwick_name      espn_name #>    1: Alex Rodriguez Rodriguez, Alex     Alex Rodriguez Alex Rodriguez #>    2: LaTroy Hawkins Hawkins, LaTroy     LaTroy Hawkins LaTroy Hawkins #>    3:     Joe Hudson     Hudson, Joe         Joe Hudson     Joe Hudson #>    4:  Bartolo Colon  Colon, Bartolo      Bartolo Colon  Bartolo Colon #>    5:   Torii Hunter   Hunter, Torii       Torii Hunter   Torii Hunter #>   ---                                                                  #> 3128:           <NA>            <NA>          Korey Lee           <NA> #> 3129:           <NA>            <NA>        James Naile           <NA> #> 3130:           <NA>            <NA> Vinnie Pasquantino           <NA> #> 3131:           <NA>            <NA>         Lenyn Sosa           <NA> #> 3132:           <NA>            <NA>      Marcus Wilson           <NA> #>       savant_id  bbref_id retro_id fangraphs_id espn_id #>    1:    121347 rodrial01 rodra001         1274    3115 #>    2:    115629 hawkila01 hawkl001          729    3176 #>    3:    621529 hudsojo03 hudsj002        14412    3258 #>    4:    112526 colonba01 colob001          375    3602 #>    5:    116338 hunteto01 huntt001          731    3723 #>   ---                                                   #> 3128:    686676   leeko01     <NA>           NA      NA #> 3129:    664942 naileja01 nailj001           NA      NA #> 3130:    686469 pasquvi01 pasqv001           NA      NA #> 3131:    672820  sosale01 sosal001           NA      NA #> 3132:    657129 wilsoma02 wilsm003           NA      NA #>                                                                     espn_headshot #>    1: https://a.espncdn.com/combiner/i?img=/i/headshots/mlb/players/full/3115.png #>    2: https://a.espncdn.com/combiner/i?img=/i/headshots/mlb/players/full/3176.png #>    3: https://a.espncdn.com/combiner/i?img=/i/headshots/mlb/players/full/3258.png #>    4: https://a.espncdn.com/combiner/i?img=/i/headshots/mlb/players/full/3602.png #>    5: https://a.espncdn.com/combiner/i?img=/i/headshots/mlb/players/full/3723.png #>   ---                                                                             #> 3128:                                                                        <NA> #> 3129:                                                                        <NA> #> 3130:                                                                        <NA> #> 3131:                                                                        <NA> #> 3132:                                                                        <NA> # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/load_mlb_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MLB Team Colors, and Logos — load_mlb_teams","title":"Load MLB Team Colors, and Logos — load_mlb_teams","text":"Loads team colors, logos - useful plots!","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/load_mlb_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MLB Team Colors, and Logos — load_mlb_teams","text":"","code":"load_mlb_teams()"},{"path":"https://camdenk.github.io/mlbplotR/reference/load_mlb_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MLB Team Colors, and Logos — load_mlb_teams","text":"tibble team-level abbreviations, image URLs, hex color codes.","code":""},{"path":[]},{"path":"https://camdenk.github.io/mlbplotR/reference/load_mlb_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load MLB Team Colors, and Logos — load_mlb_teams","text":"","code":"# \\donttest{   load_mlb_teams() #> # A tibble: 33 × 16 #>    team_name            team_abbr team_id_num team_logo_espn    team_scoreboard… #>    <chr>                <chr>           <dbl> <chr>             <chr>            #>  1 Arizona Diamondbacks ARI               109 https://a.espncd… https://a.espnc… #>  2 Atlanta Braves       ATL               144 https://a.espncd… https://a.espnc… #>  3 Baltimore Orioles    BAL               110 https://a.espncd… https://a.espnc… #>  4 Boston Red Sox       BOS               111 https://a.espncd… https://a.espnc… #>  5 Chicago Cubs         CHC               112 https://a.espncd… https://a.espnc… #>  6 Chicago White Sox    CWS               145 https://a.espncd… https://a.espnc… #>  7 Cincinnati Reds      CIN               113 https://a.espncd… https://a.espnc… #>  8 Cleveland Guardians  CLE               114 https://a.espncd… https://a.espnc… #>  9 Colorado Rockies     COL               115 https://a.espncd… https://a.espnc… #> 10 Detroit Tigers       DET               116 https://a.espncd… https://a.espnc… #> # … with 23 more rows, and 11 more variables: team_cap_logo_on_light <chr>, #> #   team_cap_logo_on_dark <chr>, team_color <chr>, team_color2 <chr>, #> #   team_color3 <chr>, team_color4 <chr>, team_color5 <chr>, team_league <chr>, #> #   team_division <chr>, team_league_logo <chr>, mlb_logo <chr> # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/mlbplotR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlbplotR: Create ggplot2 Visuals with MLB Logos — GeomMLBdarkcaplogo","title":"mlbplotR: Create ggplot2 Visuals with MLB Logos — GeomMLBdarkcaplogo","text":"set functions help visualize MLB analysis 'ggplot2'.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/mlbplotR-package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mlbplotR: Create ggplot2 Visuals with MLB Logos — GeomMLBdarkcaplogo","text":"","code":"GeomMLBdarkcaplogo  GeomMLBlightcaplogo  GeomFromPath  GeomMLBheads  GeomMLBlogo  GeomMLBscoreboardlogo"},{"path":"https://camdenk.github.io/mlbplotR/reference/mlbplotR-package.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mlbplotR: Create ggplot2 Visuals with MLB Logos — GeomMLBdarkcaplogo","text":"object class GeomMLBdarkcaplogo (inherits Geom, ggproto, gg) length 5. object class GeomMLBlightcaplogo (inherits Geom, ggproto, gg) length 5. object class GeomFromPath (inherits Geom, ggproto, gg) length 5. object class GeomMLBheads (inherits Geom, ggproto, gg) length 5. object class GeomMLBlogo (inherits Geom, ggproto, gg) length 5. object class GeomMLBscoreboardlogo (inherits Geom, ggproto, gg) length 5.","code":""},{"path":[]},{"path":"https://camdenk.github.io/mlbplotR/reference/mlbplotR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlbplotR: Create ggplot2 Visuals with MLB Logos — GeomMLBdarkcaplogo","text":"Maintainer: Camden Kay camden.kay23@gmail.com Authors: Sebastian Carl mrcaseb@gmail.com","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_axes_mlb.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis Scales for MLB Team Logos — scale_axes_mlb","title":"Axis Scales for MLB Team Logos — scale_axes_mlb","text":"functions map MLB team names team logos make   available axis labels","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_axes_mlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis Scales for MLB Team Logos — scale_axes_mlb","text":"","code":"scale_x_mlb(   ...,   expand = ggplot2::waiver(),   guide = ggplot2::waiver(),   position = \"bottom\",   size = 12 )  scale_y_mlb(   ...,   expand = ggplot2::waiver(),   guide = ggplot2::waiver(),   position = \"left\",   size = 12 )"},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_axes_mlb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis Scales for MLB Team Logos — scale_axes_mlb","text":"... Arguments passed discrete_scale palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. na.value na.translate = TRUE, aesthetic value missing values displayed ? apply position scales NA always placed far right. aesthetics names aesthetics scale works . scale_name name scale used error messages associated scale. name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. super super class use constructed scale expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes. size logo size pixels. applied height x-scale width y-scale.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_axes_mlb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis Scales for MLB Team Logos — scale_axes_mlb","text":"discrete ggplot2 scale created [ggplot2::scale_x_discrete()]   [ggplot2::scale_y_discrete()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_axes_mlb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Axis Scales for MLB Team Logos — scale_axes_mlb","text":"scale translates MLB team abbreviations raw image   html places html axis labels. way ggplots   constructed, necessary adjust [`theme()`] calling   scale. can done calling [`theme_x_mlb()`] [`theme_y_mlb()`]   alternatively manually changing relevant `axis.text`   [`ggtext::element_markdown()`]. However, work underlying   dependency, \"gridtext\", installed newer version 0.1.4","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_axes_mlb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis Scales for MLB Team Logos — scale_axes_mlb","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove league logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr )  if (utils::packageVersion(\"gridtext\") > \"0.1.4\"){   # use logos for x-axis   ggplot(df, aes(x = teams, y = random_value)) +     geom_col(aes(color = teams, fill = teams), width = 0.5) +     scale_color_mlb(type = \"secondary\") +     scale_fill_mlb(alpha = 0.4) +     scale_x_mlb() +     theme_minimal() +     # theme_*_mlb requires gridtext version > 0.1.4     theme_x_mlb()    # use logos for y-axis   ggplot(df, aes(y = teams, x = random_value)) +     geom_col(aes(color = teams, fill = teams), width = 0.5) +     scale_color_mlb(type = \"secondary\") +     scale_fill_mlb(alpha = 0.4) +     scale_y_mlb() +     theme_minimal() +     # theme_*_mlb requires gridtext version > 0.1.4     theme_y_mlb() } # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_mlb.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for MLB Team Colors — scale_mlb","title":"Scales for MLB Team Colors — scale_mlb","text":"functions map MLB team names team colors   color fill aesthetics","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_mlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales for MLB Team Colors — scale_mlb","text":"","code":"scale_color_mlb(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"colour\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )  scale_colour_mlb(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"colour\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )  scale_fill_mlb(   type = c(\"primary\", \"secondary\"),   values = NULL,   ...,   aesthetics = \"fill\",   breaks = ggplot2::waiver(),   na.value = \"grey50\",   guide = NULL,   alpha = NA )"},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_mlb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales for MLB Team Colors — scale_mlb","text":"type One `\"primary\"` `\"secondary\"` decide colortype use. values `NULL` (default) use internal team color vectors. Otherwise set aesthetic values map data values . values matched order (usually alphabetical) limits scale, `breaks` provided. named vector, values matched based names instead. Data values match given `na.value`. ... Arguments passed discrete_scale palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. scale_name name scale used error messages associated scale. name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) function takes breaks input returns labels output. Also accepts rlang lambda function notation. guide function used create guide name. See guides() information. super super class use constructed scale aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output na.value aesthetic value use missing (NA) values guide function used create guide name. `NULL` (default) guide plotted scale. See [ggplot2::guides()] information. alpha Factor modify color transparency via call [`scales::alpha()`]. `NA` (default) transparency applied. Can also vector alphas. alpha levels must range `[0,1]`.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/scale_mlb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales for MLB Team Colors — scale_mlb","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove league logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr ) ggplot(df, aes(x = teams, y = random_value)) +   geom_col(aes(color = teams, fill = teams), width = 0.5) +   scale_color_mlb(type = \"secondary\") +   scale_fill_mlb(alpha = 0.4) +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/theme_mlb.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for MLB Team Logos — theme_mlb","title":"Theme for MLB Team Logos — theme_mlb","text":"functions convenience wrappers around theme call   activates markdown x-axis y-axis labels   using [`ggtext::element_markdown()`].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/theme_mlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for MLB Team Logos — theme_mlb","text":"","code":"theme_x_mlb()  theme_y_mlb()"},{"path":"https://camdenk.github.io/mlbplotR/reference/theme_mlb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for MLB Team Logos — theme_mlb","text":"ggplot2 theme created [ggplot2::theme()].","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/theme_mlb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme for MLB Team Logos — theme_mlb","text":"functions wrapper around function calls   `ggplot2::theme(axis.text.x = ggtext::element_markdown())` well   `ggplot2::theme(axis.text.y = ggtext::element_markdown())`.   made used conjunction [`scale_x_mlb()`]   [`scale_y_mlb()`] respectively.","code":""},{"path":[]},{"path":"https://camdenk.github.io/mlbplotR/reference/theme_mlb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for MLB Team Logos — theme_mlb","text":"","code":"# \\donttest{ library(mlbplotR) library(ggplot2)  team_abbr <- valid_team_names() # remove conference logos from this example team_abbr <- team_abbr[!team_abbr %in% c(\"AL\", \"NL\", \"MLB\")]  df <- data.frame(   random_value = runif(length(team_abbr), 0, 1),   teams = team_abbr ) if (utils::packageVersion(\"gridtext\") > \"0.1.4\"){   ggplot(df, aes(x = teams, y = random_value)) +     geom_col(aes(color = teams, fill = teams), width = 0.5) +     scale_color_mlb(type = \"secondary\") +     scale_fill_mlb(alpha = 0.4) +     scale_x_mlb() +     theme_minimal() +     # theme_*_mlb requires gridtext version > 0.1.4     theme_x_mlb() } # }"},{"path":"https://camdenk.github.io/mlbplotR/reference/valid_team_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Valid MLB Team Abbreviations — valid_team_names","title":"Output Valid MLB Team Abbreviations — valid_team_names","text":"Output Valid MLB Team Abbreviations","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/valid_team_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Valid MLB Team Abbreviations — valid_team_names","text":"","code":"valid_team_names()"},{"path":"https://camdenk.github.io/mlbplotR/reference/valid_team_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output Valid MLB Team Abbreviations — valid_team_names","text":"vector type `\"character\"`.","code":""},{"path":"https://camdenk.github.io/mlbplotR/reference/valid_team_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output Valid MLB Team Abbreviations — valid_team_names","text":"","code":"# List valid team abbreviations excluding duplicates valid_team_names() #>  [1] \"AL\"  \"ARI\" \"ATL\" \"BAL\" \"BOS\" \"CHC\" \"CIN\" \"CLE\" \"COL\" \"CWS\" \"DET\" \"HOU\" #> [13] \"KC\"  \"LAA\" \"LAD\" \"MIA\" \"MIL\" \"MIN\" \"MLB\" \"NL\"  \"NYM\" \"NYY\" \"OAK\" \"PHI\" #> [25] \"PIT\" \"SD\"  \"SEA\" \"SF\"  \"STL\" \"TB\"  \"TEX\" \"TOR\" \"WSH\""},{"path":"https://camdenk.github.io/mlbplotR/news/index.html","id":"mlbplotr-development-version","dir":"Changelog","previous_headings":"","what":"mlbplotR (development version)","title":"mlbplotR (development version)","text":"Added geom_mlb_logos() geom. Added color fill scales scale_color_mlb() scale_fill_mlb() along axis scales scale_x_mlb() scale_y_mlb() combination theme update functions theme_x_mlb() theme_y_mlb(). Also added ggplot2 theme-element element_mlb_logo() translates MLB team abbreviations team logos (v0.0.0.9002) Added geom_mlb_headshots() geom plots headshots valid MLB IDs. Along function ggpreview() allows preview ggplot ’s actual dimensions. (v0.0.9003) Added ggplot2 theme-element element_mlb_headshot() translates player IDs player headshots. (v0.0.0.9004) Added function ggpreview() allows preview ggplot ’s actual dimensions. (v.0.0.9005) Added geom_from_path() geom plots images urls, local paths, . Also added element_path() translates supplied links images axes labeling (v.0.0.9006) Added geom_mlb_scoreboard_logos(), geom_mlb_dark_cap_logos(), geom_mlb_light_cap_logos() geoms translate MLB team abbreviations team logos. Also added corresponding element functions (element_mlb_scoreboard_logo(), element_mlb_dark_cap_logo(), element_mlb_light_cap_logo()) translates supplied abbreviations images theming. Also updated function parameter names. (v.0.0.9007) Added load_headshots() function exported functions. (v.0.0.9008) Added clean_team_abbrs() function implemented proper geoms. (v.0.0.9009) Added gt_fmt_mlb_logo(), gt_fmt_mlb_scoreboard_logo(), gt_merge_stack_team_color() functions aid making gt tables. (v.0.0.9010)","code":""}]
