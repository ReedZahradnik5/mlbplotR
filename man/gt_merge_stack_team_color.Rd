% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_helpers.R
\name{gt_merge_stack_team_color}
\alias{gt_merge_stack_team_color}
\title{Merge and stack text from two columns in \code{gt} and color one with team colors}
\usage{
gt_merge_stack_team_color(
  gt_object,
  col1,
  col2,
  team_col,
  font_size_top = 12,
  font_size_bottom = 14,
  color = "black"
)
}
\arguments{
\item{gt_object}{An existing gt table object of class \code{gt_tbl}}

\item{col1}{The column to stack on top. Will be converted to all caps, with black and bold text.}

\item{col2}{The column to merge and place below. Will be smaller and the team color that corresponds to \code{team_col}.}

\item{team_col}{The column of team names that match \code{valid_team_names()} for the color of the bottom.}

\item{font_size_top}{the font size for the top text.}

\item{font_size_bottom}{the font size for the bottom text.}

\item{color}{The color for the top text.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
The \code{gt_merge_stack_team_color()} function takes an existing \code{gt} table and merges
column 1 and column 2, stacking column 1's text on top of column 2's.
Top text is in all caps while the lower text is bigger, bolded,
and colored by the team name in another column.
This is a slightly modified version of \href{https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html}{\code{gtExtras::gt_merge_stack()}}  written by Tom Mock.
}
\examples{
library(gt)
library(mlbplotR)

gt_merge_example <- mlbplotR::load_mlb_teams() \%>\%
  dplyr::slice(1:5) \%>\%
  dplyr::select(team_abbr, team_name) \%>\%
  tidyr::separate(team_name, c("Team1", "Team2","Team3"), fill = "left") \%>\%
  dplyr::mutate(Team3 = dplyr::if_else(Team3 \%in\% c("Sox", "Jays"), paste(Team2, Team3), Team3),
                Team2 = dplyr::case_when(grepl("Sox|Jays", Team3) ~ Team1,
                                         Team3 == "Cardinals" ~ paste(Team1, Team2, sep = ". "),
                                         is.na(Team1) ~ Team2,
                                         TRUE ~ paste(Team1, Team2))) \%>\%
  dplyr::select(team_abbr, Team2, Team3) \%>\%
  gt::gt() \%>\%
  gt_merge_stack_team_color(col1 = "Team2", col2 = "Team3", team_col = "team_abbr")
}
